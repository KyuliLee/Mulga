import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		int[][] arr = new int[N][3];
		for (int i = 0; i < N; i++) {
			StringTokenizer tokens = new StringTokenizer(br.readLine());
			arr[i][0] = Integer.parseInt(tokens.nextToken());
			arr[i][1] = Integer.parseInt(tokens.nextToken());
			arr[i][2] = Integer.parseInt(tokens.nextToken());
		}
		int[][] max = new int[N][3];
		int[][] min = new int[N][3];
		for (int i = 0; i < 3; i++) {
			max[0][i] = arr[0][i];
			min[0][i] = arr[0][i];
		}
		for (int i = 1; i < N; i++) {
			max[i][0] = arr[i][0] + Math.max(max[i - 1][0], max[i- 1][1]);
			max[i][1] = arr[i][1] + Math.max(max[i - 1][0], Math.max(max[i - 1][1], max[i- 1][2]));
			max[i][2] = arr[i][2] + Math.max(max[i - 1][1], max[i- 1][2]);
		}
		for (int i = 1; i < N; i++) {
			min[i][0] = arr[i][0] + Math.min(min[i - 1][0], min[i- 1][1]);
			min[i][1] = arr[i][1] + Math.min(min[i - 1][0], Math.min(min[i - 1][1], min[i- 1][2]));
			min[i][2] = arr[i][2] + Math.min(min[i - 1][1], min[i- 1][2]);
		}
		System.out.println(Math.max(max[N - 1][0], Math.max(max[N - 1][1], max[N - 1][2])) + " " + Math.min(min[N - 1][0], Math.min(min[N - 1][1], min[N - 1][2])));
	}
	
}
